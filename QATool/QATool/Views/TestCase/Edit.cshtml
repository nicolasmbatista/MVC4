@model QATool.Models.TestCase

@{
    ViewBag.Title = "Edit";
}

<h2>@ViewBag.ProjectName - Test Case @Html.DisplayFor(model => model.TestCaseId)</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>TestCase</legend>

        <div class="editor-field">            
            @Html.Hidden("ProjectId")
           
            @Html.ValidationMessageFor(model => model.ProjectId)
        </div>
        
            @Html.Hidden("TestCaseId")
        <div class="editor-label">
            @Html.LabelFor(model => model.Feature)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Feature)
            @Html.ValidationMessageFor(model => model.Feature)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Scenario)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Scenario)
            @Html.ValidationMessageFor(model => model.Scenario)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.Environment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Environment)
            @Html.ValidationMessageFor(model => model.Environment)
        </div>

        <div class="display-label">
            Steps
        </div>

        <button class="btnAddStep" type="button">Add Step</button>
        
        <table id="TestCaseSteps">
            <tr>
                <th>
                    Step
                </th>
                <th>
                    Action
                </th>
                <th>
                    Expected Result
                </th>
            </tr>

            @{
                ViewBag.i = 0;
            }

            @foreach (var step in Model.Steps)
            {
                ViewBag.i++;
                @*<tr>
                    <td>
                        <input type="hidden" name="Steps.Index" value="@ViewBag.i" />
                    </td>
                    <td>
                        <div class="display-label">
                            @ViewBag.i                            
                            <input type="hidden" name="Steps[@ViewBag.i].StepId" value="@step.StepId" />
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <input type="text" name="Steps[@ViewBag.i].Action" value="@step.Action" />
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <input type="text" name="Steps[@ViewBag.i].Result" value="@step.Result" />
                        </div>
                    </td>
                </tr>*@
                //@StepRow(ViewBag.i, step.StepId, step.Action, step.Result)
                //The partial view is also working
                 @Html.Partial("_StepRow", step)
            }


        </table>

        <div class="editor-label">
            @Html.LabelFor(model => model.Result)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Result)
            @Html.ValidationMessageFor(model => model.Result)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BugId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BugId)
            @Html.ValidationMessageFor(model => model.BugId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Comments)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comments)
            @Html.ValidationMessageFor(model => model.Comments)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>    
    
}

<div>
    @Html.ActionLink("Go Back", "List", "Project", new { projectId = Model.ProjectId }, null)
</div>

 


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval") 
    <script type="text/javascript">
        $('document').ready(function () {            
            $('.btnAddStep').on('click', function () {
                $('#TestCaseSteps').append($('#stepTemplate').text());
            });
        });
    </script>
    <script id="stepTemplate">
        @StepRow(100)
    </script>
}

@helper StepRow(int i, int id = 0, string action = null, string result = null)
{
    <tr>
        <td>
            <input type="hidden" name="Steps.Index" value="@i" />
        </td>
        <td>
            <div class="display-label">
                @i
                <input type="hidden" name="Steps[@i].StepId" value="@id" />
            </div>
        </td>
        <td>
            <div class="editor-field">
                <input class="text-box single-line" data-val="true" data-val-required="The Action field is required." id="Steps_action" name="Steps[@i].Action" type="text" value="@action" />
                <span class="field-validation-valid" data-valmsg-for="Steps_action" data-valmsg-replace="true"></span>           
            </div>
        </td>
        <td>
            <div class="editor-field">
                <input class="text-box single-line" data-val="true" data-val-required="The Result field is required." id="Steps_result" name="Steps[@i].Result" type="text" value="@result" />
                <span class="field-validation-valid" data-valmsg-for="Steps_result" data-valmsg-replace="true"></span>            </div>
        </td>
    </tr>
}

