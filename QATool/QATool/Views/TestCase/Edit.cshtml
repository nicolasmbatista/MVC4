@model QATool.Models.TestCase

@{
    ViewBag.Title = "Edit";
}

<h2>@ViewBag.ProjectName - Test Case @Html.DisplayFor(model => model.TestCaseId)</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>TestCase</legend>

        <div class="editor-field">            
            @Html.Hidden("ProjectId")
           
            @Html.ValidationMessageFor(model => model.ProjectId)
        </div>
        
            @Html.Hidden("TestCaseId")
        <div class="editor-label">
            @Html.LabelFor(model => model.Feature)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Feature)
            @Html.ValidationMessageFor(model => model.Feature)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Scenario)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Scenario)
            @Html.ValidationMessageFor(model => model.Scenario)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.Environment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Environment)
            @Html.ValidationMessageFor(model => model.Environment)
        </div>

        <div class="display-label">
            Steps
        </div>

        @Html.ActionLink("Add step", "Create", "Step", new { testCaseId = Model.TestCaseId }, null)

        <table>
            <tr>
                <th>
                    Step
                </th>
                <th>
                    Action
                </th>
                <th>
                    Expected Result
                </th>
            </tr>

            @{ViewBag.i = 1;}
            @foreach (var item in Model.Steps)
            {
                <tr>
                    <td>
                        <span>@ViewBag.i</span>
                        @{ViewBag.i = ViewBag.i + 1;}
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Action)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Result)
                    </td>
                </tr>
            }
        </table>

        <div class="editor-label">
            @Html.LabelFor(model => model.Result)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Result)
            @Html.ValidationMessageFor(model => model.Result)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BugId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BugId)
            @Html.ValidationMessageFor(model => model.BugId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Comments)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comments)
            @Html.ValidationMessageFor(model => model.Comments)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Go Back","List","Project",new {projectId = Model.ProjectId} ,null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
